Part 1:

For part one, the requests were:
    1. Find all passwords that are valid according to the following:
        Strings written as: num-num char: string;
        Where the numbers indicate a range that the character must appear in the string that many times.
    2. Return the total valid password strings.

For this, I knew all I had to do was to break down the strings into their individual parts to work

Because all of the strings were formatted in the same way, I was able to split them easily.

Then, using a for loop, I iterated through the separated strings and :
    Set the two numbers to the min amount and max amount
    Set the character to be searched for
    Iterated through the string for matches and increasing a count variable with every match
    And finally, checked if the count variable was within the stated bounds
    If the count was within bounds, I increased an external count variable

From this, I returned the value of 607, which was the correct answer

Part 2
For part 2, the main difference was that the two numbers indicated two indices rather than a range.

So, all I needed to do was to use the same code as part one, but instead of iterating through the string for matches,
I just tested to see if the characters at each index location matched the focus character.
The index numbers were decreased by one since the system index was said to start at 1 rather than 0.

I had three conditions of:
    Neither equal,
    Both equal, and
    Only one equal, in which I increased the valid count by one

From this, I returned the value of 321, which was correct.